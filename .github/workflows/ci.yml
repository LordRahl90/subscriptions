name: Lint and Test
on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
      - "main"

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint and Vet
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: subscriptions
          ENVIRONMENT: cicd
        ports:
          - 33306:3306
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Test
        run: ENVIRONMENT=cicd make test


  test-with-race:
    name: Test With Race
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: subscriptions
          ENVIRONMENT: cicd
        ports:
          - 33306:3306
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Test With Race
        run: ENVIRONMENT=cicd make twr


  build-and-push:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - test-with-race
    steps:
      - name: 'Checkout The code'
        uses: actions/checkout@master

      - name: 'Extract Branch'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: lordrahl/subscriptions:${{ steps.extract_branch.outputs.branch }}-${{ github.run_id }}-${{ github.run_number }}